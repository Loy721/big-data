[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.9 (Oracle Corporation Java 17.0.9)
[debug] Load.defaultLoad until apply took 134.452401ms
[debug]           Load.loadUnit: plugins took 53.061399ms
[debug]           Load.loadUnit: defsScala took 0.465799ms
[debug] [Loading] Scanning directory C:\Users\dynka\IdeaProjects\db_labs\lab_2\project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\dynka\IdeaProjects\db_labs\lab_2\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 16.959101 ms
[debug]               Load.resolveProject(lab_2-build) took 44.5877ms
[debug]             Load.loadTransitive: finalizeProject(Project(id lab_2-build, base: C:\Users\dynka\IdeaProjects\db_labs\lab_2\project, plugins: List(<none>))) took 76.655201ms
[debug] [Loading] Done in C:\Users\dynka\IdeaProjects\db_labs\lab_2\project, returning: (lab_2-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 89.112199ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.409ms
[debug]         Load.loadUnit(file:/C:/Users/dynka/IdeaProjects/db_labs/lab_2/project/, ...) took 150.4946ms
[debug]       Load.apply: load took 273.058201ms
[debug]       Load.apply: resolveProjects took 3.584599ms
[debug]       Load.apply: finalTransforms took 39.0923ms
[debug]       Load.apply: config.delegates took 5.5272ms
[debug]       Load.apply: Def.make(settings)... took 311.8418ms
[debug]       Load.apply: structureIndex took 76.578299ms
[debug]       Load.apply: mkStreams took 2.219801ms
[info] loading project definition from C:\Users\dynka\IdeaProjects\db_labs\lab_2\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 1304.1644ms
[debug]     Load.loadUnit: defsScala took 0.0037ms
[debug] [Loading] Scanning directory C:\Users\dynka\IdeaProjects\db_labs\lab_2
[debug]       Load.loadUnit: mkEval took 3.568099ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.119201 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 5.308ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\dynka\IdeaProjects\db_labs\lab_2, plugins: List(<none>))) took 7.1611ms
[debug] [Loading] Done in C:\Users\dynka\IdeaProjects\db_labs\lab_2, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1337.2384ms
[debug]     Load.loadUnit: cleanEvalClasses took 7.641599ms
[debug]   Load.loadUnit(file:/C:/Users/dynka/IdeaProjects/db_labs/lab_2/, ...) took 2650.5913ms
[debug] Load.apply: load took 2680.862199ms
[debug] Load.apply: resolveProjects took 0.086201ms
[debug] Load.apply: finalTransforms took 7.0789ms
[debug] Load.apply: config.delegates took 0.1993ms
[debug] Load.apply: Def.make(settings)... took 45.8846ms
[debug] Load.apply: structureIndex took 24.336399ms
[debug] Load.apply: mkStreams took 0.0017ms
[info] set current project to lab_2 (in build file:/C:/Users/dynka/IdeaProjects/db_labs/lab_2/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:sbt-server-0aa77262ec9b9ab32b94
[debug] Writing bsp connection file
[info] started sbt server
